<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 绑定一个对应Dao接口-->
<mapper namespace="com.wyb.UserMapper">
    <!-- select 查询语句-->
    <!-- id="getUserList" 为查询方法名 -->
    <!-- resultType="com.wyb.User" 为返回结果类型 -->
    <select id="getUserList" resultType="com.wyb.User">
      SELECT * from mybatis.user
    </select>


    <!-- 通配符写道sql里能防止sql注入 -->
    <select id="getUserLike" resultType="com.wyb.User">
      SELECT * from mybatis.user where name like "%"#{value}"%"
    </select>


    <select id="getUserById" parameterType="int" resultType="com.wyb.User">
        SELECT * from mybatis.user where id = #{id}
    </select>

    <insert id="addUser" parameterType="com.wyb.User">
        insert into mybatis.user(id,name,pwd) values (#{id},#{name},#{pwd})
    </insert>

    <!-- 传递map的key-->
    <insert id="addUser2" parameterType="map">
        insert into mybatis.user(id,name,pwd) values (#{userid},#{username},#{userpwd})
    </insert>


    <update id="updateUser" parameterType="com.wyb.User" >
        update mybatis.user set name = #{name},pwd = #{pwd} where id = #{id}
    </update>

    <update id="updateUser2" parameterType="map" >
        update mybatis.user set name = #{u_name} where id = #{u_id}
    </update>


    <delete id="deleteUser" parameterType="com.wyb.User">
        delete from mybatis.user where id = #{id}
    </delete>
</mapper>